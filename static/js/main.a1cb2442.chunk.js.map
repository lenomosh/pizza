{"version":3,"sources":["components/ProductCard/ProductCard.component.jsx","components/ProductDetails/ProductDetails.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductCard","product","className","style","width","src","image","alt","name","price","to","pathname","state","ProductDetails","location","useState","selectedCrusting","setselectedCrusting","success","setSuccess","meatToppings","vegetableToppings","selectedPizza","setSelectedPizza","cartItems","setcartItems","inCart","filter","element","length","handleAddToCart","event","preventDefault","cartCopy","JSON","parse","stringify","console","log","find","indexOf","removed","role","onClick","window","href","map","key","e","total","newTotal","reduce","prevVal","newVal","calcTotal","App","pizzas","path","component","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1cb2442.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProductCard = ({ product }) => {\n  return (\n    <div className=\"card\" style={{ width: \"18rem\" }}>\n      <img className=\"card-img-top\" src={product.image} alt=\"Card image cap\" />\n      <div className=\"card-body center\">\n        <h4 className=\"card-title\">{product.name}</h4>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h5>KES {product.price}</h5>\n          </div>\n          <div className=\"col-md-12\">\n            <Link\n              to={{\n                pathname: \"/cart\",\n                state: {\n                  product,\n                },\n              }}\n              className=\"btn btn-xs\"\n            >\n              Add to Cart\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React, { useState } from \"react\";\n\nconst ProductDetails = ({\n  location: {\n    state: { product },\n  },\n}) => {\n  const crustings = [\n    {\n      name: \"Scrispy\",\n      price: 250,\n    },\n    {\n      name: \"Stuffed\",\n      price: 250,\n    },\n    {\n      name: \"Glottin-free\",\n      price: 250,\n    },\n  ];\n  const [selectedCrusting, setselectedCrusting] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [meatToppings, setMeatToppings] = useState([\n    {\n      name: \"Extra Macon\",\n      price: 200,\n    },\n    {\n      name: \"Extra Bqb Chicken\",\n      price: 200,\n    },\n    {\n      name: \"Extra Bqb Steak\",\n      price: 200,\n    },\n    {\n      name: \"Extra Chicken Tikka\",\n      price: 200,\n    },\n    {\n      name: \"Extra Sandwich Beef\",\n      price: 200,\n    },\n    {\n      name: \"Extra Peperoni\",\n      price: 200,\n    },\n    {\n      name: \"Extra Chicken\",\n      price: 200,\n    },\n  ]);\n  const [vegetableToppings, setVegetableToppings] = useState([\n    {\n      name: \"Extra Chilli\",\n      price: 150,\n    },\n    {\n      name: \"Extra Mushrooms\",\n      price: 150,\n    },\n    {\n      name: \"Extra Olives\",\n      price: 150,\n    },\n    {\n      name: \"Extra Onions\",\n      price: 150,\n    },\n    {\n      name: \"Extra Pineapple\",\n      price: 150,\n    },\n    {\n      name: \"Extra Sweetcorn\",\n      price: 150,\n    },\n    {\n      name: \"Extra Tomatoes\",\n      price: 150,\n    },\n  ]);\n  const [selectedPizza, setSelectedPizza] = useState(product);\n  const refresh = () => {\n    window.location.href = \"/\";\n  };\n  const [cartItems, setcartItems] = useState([]);\n  const pizzaSizes = [\n    {\n      name: \"Pizza Pie\",\n      price: 300,\n    },\n    {\n      name: \"Regular\",\n      price: 700,\n    },\n    {\n      name: \"Medium\",\n      price: 900,\n    },\n    {\n      name: \"Large\",\n      price: 1200,\n    },\n  ];\n  const calcTotal = () => {\n    const cartCopy = JSON.parse(JSON.stringify(cartItems));\n    let total = cartCopy.map(({ price }) => price);\n    let newTotal =\n      total.length > 0 && total.reduce((prevVal, newVal) => prevVal + newVal);\n    if (selectedCrusting) {\n    }\n    newTotal += selectedCrusting && selectedCrusting.price;\n    return selectedPizza && selectedPizza.price + newTotal;\n  };\n  const inCart = (product) => {\n    const find =\n      cartItems && cartItems.filter((element) => element.name === product.name);\n    return find.length > 0;\n  };\n  const handleAddToCart = (event, product) => {\n    event.preventDefault();\n    const cartCopy = JSON.parse(JSON.stringify(cartItems));\n    console.log(cartCopy.length);\n    const find = cartItems.filter((element) => element.name === product.name);\n\n    console.log(\"index of\", cartCopy.indexOf(find[0]));\n    if (find.length > 0) {\n      console.log(\"find length\", find);\n      const removed = cartItems.filter(\n        (element) => element.name !== find[0].name\n      );\n      console.log(\"removed\", removed);\n      console.log(cartCopy.length);\n      setcartItems([removed]);\n    } else {\n      console.log(cartCopy);\n      setcartItems([...cartCopy, product]);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {!success ? (\n          <div className=\"row\">\n            <div className=\"col-md-9\">\n              <h3>Pizza Size</h3>\n              <div className=\"row\">\n                {pizzaSizes.map((element) => (\n                  <div key={element.name} className=\"col-md-3\">\n                    <button\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setSelectedPizza(element);\n                      }}\n                      className={`btn btn-xs  btn-block \"+ ${\n                        selectedPizza.name === element.name && \"btn-success\"\n                      }`}\n                    >\n                      <h4>{element.name}</h4> @ <i>KES. {element.price}</i>\n                    </button>\n                  </div>\n                ))}\n              </div>\n              <br />\n              <h3>Crustings</h3>\n              <div className=\"row\">\n                {crustings.map((element) => (\n                  <div key={element.name} className=\"col-md-3\">\n                    <button\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setselectedCrusting(element);\n                      }}\n                      className={`btn btn-xs  btn-block \"+ ${\n                        selectedCrusting &&\n                        selectedCrusting.name === element.name &&\n                        \"btn-success\"\n                      }`}\n                    >\n                      <h4>{element.name}</h4> @ <i>KES. {element.price}</i>\n                    </button>\n                  </div>\n                ))}\n              </div>\n              <br />\n              <h3>Meat Toppings</h3>\n              <hr />\n              <div className=\"row\">\n                {meatToppings.map((element) => (\n                  <div key={element.name} className=\"col-md-3 py-4\">\n                    <button\n                      onClick={(e) => handleAddToCart(e, element)}\n                      className={`btn btn-xs  btn-block \"+ ${\n                        inCart(element) && \"btn-success\"\n                      }`}\n                    >\n                      <h4>{element.name}</h4> @ <i>KES. {element.price}</i>\n                    </button>\n                  </div>\n                ))}\n              </div>\n              <br />\n              <h3>Chicken Toppings</h3>\n              <hr />\n              <div className=\"row\">\n                {vegetableToppings.map((element) => (\n                  <div key={element.name} className=\"col-md-3 py-4\">\n                    <button\n                      onClick={(e) => handleAddToCart(e, element)}\n                      className={`btn btn-xs  btn-block \"+ ${\n                        inCart(element) && \"btn-success\"\n                      }`}\n                    >\n                      <h4>{element.name}</h4> @ <i>KES. {element.price}</i>\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <h3>Cart</h3>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <td>\n                      <h4>{product.name}</h4>\n                    </td>\n                    <td>\n                      <h4>{selectedPizza.price}</h4>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {selectedCrusting && (\n                    <tr>\n                      <td>{selectedCrusting.name}</td>\n                      <td>{selectedCrusting.price}</td>\n                    </tr>\n                  )}\n                  {cartItems.map((element) => (\n                    <tr key={element.name + element.price}>\n                      <td>{element.name}</td>\n                      <td>{element.price}</td>\n                    </tr>\n                  ))}\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td>\n                      <h3>Total</h3>\n                    </td>\n                    <td>\n                      <h3>{calcTotal()}</h3>\n                    </td>\n                  </tr>\n                </tfoot>\n              </table>\n              <button\n                onClick={() => setSuccess(true)}\n                className=\"btn btn-block\"\n              >\n                CheckOut\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"col-md-12\">\n            <div className=\"alert alert-success\" role=\"alert\">\n              <p>\n                The order was place successfully. Kindly await for a\n                confirmation\n              </p>\n              <button onClick={() => refresh()} className=\"btn btn-success\">\n                {\" \"}\n                Okay\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductDetails;\n","import React from \"react\";\nimport \"./App.scss\";\nimport ProductCard from \"./components/ProductCard/ProductCard.component\";\nimport ProductDetails from \"./components/ProductDetails/ProductDetails.component\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const pizzas = [\n    {\n      name: \"Chicken Mushroom Pizza\",\n      price: 1080,\n      image: \"images/chickenmushrooms.jpg\",\n    },\n    {\n      name: \"Deep Dish Pizza\",\n      price: 1250,\n      image: \"images/deep-dish-pizza.jpg\",\n    },\n    {\n      name: \"Dessert Pizza\",\n      price: 1050,\n      image: \"images/dessert-pizza.jpg\",\n    },\n    {\n      name: \"Mergherita Pizza\",\n      price: 700,\n      image: \"images/mergherita.jpeg\",\n    },\n    {\n      name: \"Hawalinza Pizza\",\n      price: 1200,\n      image: \"images/download.jpeg\",\n    },\n    ,\n    {\n      name: \"Dominos Pizza\",\n      price: 850,\n      image: \"images/dominos-pizza.jpg\",\n    },\n  ];\n\n  return (\n    <div className=\"container center\">\n      <Switch>\n        <Route path=\"/cart\" component={ProductDetails} />\n        <Route\n          path=\"/\"\n          render={() => (\n            <div>\n              <h1 className=\"text-center\">Pizza Center</h1>\n              <h3 className=\"text-center\">\n                Welcome to Pizza Center, please select the pizza you want\n              </h3>\n              <div className=\"row\">\n                {pizzas.map((element) => (\n                  <div className=\"col-md-4 py-4\">\n                    <ProductCard product={element} />\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter,browserHistory } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}